{"version":3,"sources":["createProfile_script.js","formValidationMethods.js","createProfile_validation.js"],"names":[],"mappingsfile":"createProfile.js","sourcesContent":["/*\n * Profile-related scripts\n */\n\n$(document).ready(function(){\n    /*\n     * Create Profile specific\n     */\n\n    var select_province = function(i){\n        // Dynamically produce select element with options based on provinces\n        var selectElement = '<select name=\"farmAddress['+i+'][province]\">';\n\n        for(var key in provinces){\n            selectElement += '<option value=\"' + key + '\">' + key + '</option>';\n        }\n\n        selectElement += '</select>';\n\n        return selectElement;\n    };\n\n    $('#create-profile #farm-tab').addClass('disabled');\n\n    // Next and previous buttons\n    $('#create-profile #next').click(function(e){\n        e.preventDefault();\n        if($('#farm-tab').hasClass('disabled')) $('#farm-tab').removeClass('disabled');\n        $('ul.tabs').tabs('select_tab','farm-information');\n    });\n\n    $('#create-profile #previous').click(function(e){\n        e.preventDefault();\n        $('ul.tabs').tabs('select_tab','personal-information');\n    });\n\n\n  // Same address as office information feature\n  $(\".same-address-checker\").change(function (e) {\n    e.preventDefault();\n\n    var farm_specific = $(this).attr('class').split(' ')[1];\n    var farm_specific_province = \"#\" + farm_specific;\n    farm_specific = \".\" + farm_specific;\n\n    var office_address1 = $(\"#officeAddress_addressLine1\").val();\n    var office_address2 = $(\"#officeAddress_addressLine2\").val();\n    var office_province = $(\"#office_provinces\").val();\n    var office_postal_zip_code = $(\"#officeAddress_zipCode\").val();\n    var office_landline = $(\"#office_landline\").val();\n    var office_mobile = $(\"#office_mobile\").val();\n\n    if ($(\".same-address-checker\").is(\":checked\")) {\n      // set values\n\n      $(farm_specific + \"-addressLine1\")\n        .val(office_address1)\n        .addClass(\"input-show-hide\")\n      \n      $(farm_specific + \"-addressLine2\")\n        .val(office_address2)\n        .addClass(\"input-show-hide\")\n      \n      /* $(farm_specific_province)\n        .find(\"input[class=select-dropdown]\")\n        .val(office_province)\n        .change(); */\n\n      $(farm_specific + \"-zipCode\")\n        .val(office_postal_zip_code)\n        .addClass(\"input-show-hide\")\n\n      $(farm_specific + \"-landline\")\n        .val(office_landline)\n        .addClass(\"input-show-hide\")\n\n      $(farm_specific + \"-mobile\")\n        .val(office_mobile)\n        .addClass(\"input-show-hide\")\n        \n    } else {\n      $(farm_specific + \"-addressLine1\")\n        .val(\"\")\n        .removeClass(\"input-show-hide\")\n\n      $(farm_specific + \"-addressLine2\")\n        .val(\"\")\n        .removeClass(\"input-show-hide\")\n\n      // $(farm_specific_province).find('input[class=select-dropdown]').val('Abra')\n\n      $(farm_specific + \"-zipCode\")\n        .val(\"\")\n        .removeClass(\"input-show-hide\")\n\n      $(farm_specific + \"-farmType\")\n        .val(\"\")\n        .removeClass(\"input-show-hide\")\n\n      $(farm_specific + \"-landline\")\n        .val(\"\")\n        .removeClass(\"input-show-hide\")\n\n      $(farm_specific + \"-mobile\")\n        .val(\"\")\n        .removeClass(\"input-show-hide\")\n\n    }\n  });\n\n});\n","\"use strict\";\n\n// Place error on specific HTML input\nvar placeError = function(inputElement, errorMsg) {\n  // Parse id of element if it contains '-' for the special\n  // case of finding the input's respective\n  // label on editProfile pages\n  var inputId =\n    inputElement.id.includes(\"-\") && /\\d/.test(inputElement.id)\n      ? inputElement.id.split(\"-\")[2]\n      : inputElement.id;\n\n  $(inputElement)\n    .parents(\"form\")\n    .find(\"label[for='\" + inputId + \"']\")\n    .attr(\"data-error\", errorMsg);\n\n  setTimeout(function() {\n    if (inputElement.id.includes(\"select\")) {\n      // For select input, find first its respective input text\n      // then add the 'invalid' class\n      $(inputElement)\n        .parents(\".select-wrapper\")\n        .find(\"input.select-dropdown\")\n        .addClass(\"invalid\");\n\n      if (inputId === \"select-type\") {\n        /* Show the validation error  */\n        $(\"#select-type-data-error\").show();\n        $(\"#select-type\").on('change', function () {\n          /* Remove validation error if an option is selected */\n          $(\"#select-type-data-error\").hide();\n        });\n      }\n      else if (inputId === \"select-farm\") {\n        /* Show the validation error  */\n        $(\"#select-farm-data-error\").show();\n        $(\"#select-farm\").on('change', function () {\n          /* Remove validation error if an option is selected */\n          $(\"#select-farm-data-error\").hide();\n        });\n      }\n\n    } else if (inputElement.id.includes(\"birthdate\")) {\n      //console.log('here')\n      $(inputElement).addClass(\"invalid\");\n    } else $(inputElement).addClass(\"invalid\");\n  }, 0);\n};\n\n// Place success from specific HTML input\nvar placeSuccess = function(inputElement) {\n  // For select input, find first its respective input text\n  // then add the needed classes\n  var inputTextFromSelect = inputElement.id.includes(\"select\")\n    ? $(inputElement)\n        .parents(\".select-wrapper\")\n        .find(\"input.select-dropdown\")\n    : \"\";\n\n  // Check first if it is invalid\n  if (\n    $(inputElement).hasClass(\"invalid\") ||\n    $(inputTextFromSelect).hasClass(\"invalid\")\n  ) {\n    $(inputElement)\n      .parents(\"form\")\n      .find(\"label[for='\" + inputElement.id + \"']\")\n      .attr(\"data-error\", false);\n\n    setTimeout(function() {\n      if (inputElement.id.includes(\"select\"))\n        inputTextFromSelect.removeClass(\"invalid\").addClass(\"valid\");\n      else\n        $(inputElement)\n          .removeClass(\"invalid\")\n          .addClass(\"valid\");\n    }, 0);\n  } else {\n    if (inputElement.id.includes(\"select\"))\n      inputTextFromSelect.addClass(\"valid\");\n    else $(inputElement).addClass(\"valid\");\n  }\n};\n\nvar validationMethods = {\n  // functions must return either true or the errorMsg only\n  required: function(inputElement) {\n    var errorMsg;\n    if (inputElement.name === \"name\") errorMsg = \"Please enter product name\";\n    else errorMsg = \"This field is required\";\n\n    return inputElement.value ? true : errorMsg;\n  },\n  requiredIfRadio: function(inputElement, radioId) {\n    var errorMsg;\n    if (\n      inputElement.name === \"breed\" ||\n      inputElement.name === \"fbreed\" ||\n      inputElement.name === \"mbreed\"\n    ) {\n      errorMsg = \"Please enter swine breed\";\n    } else errorMsg = \"This field is required.\";\n\n    var radioInputElement = document.getElementById(radioId);\n    if (radioInputElement.checked) return inputElement.value ? true : errorMsg;\n    else return true;\n  },\n  requiredDropdown: function(inputElement) {\n    var errorMsg = \"This field is required\";\n    return inputElement.value ? true : errorMsg;\n  },\n  email: function(inputElement) {\n    var errorMsg = \"Please enter a valid email address\";\n    return /\\S+@\\S+\\.\\S+/.test(inputElement.value) ? true : errorMsg;\n  },\n  minLength: function(inputElement, min) {\n    var errorMsg = \"Please enter \" + min + \" or more characters\";\n    return inputElement.value.length >= min ? true : errorMsg;\n  },\n  equalTo: function(inputElement, compareInputElementId) {\n    var errorMsg = \"Please enter the same value\";\n    var compareInputElement = document.getElementById(compareInputElementId);\n    return inputElement.value === compareInputElement.value ? true : errorMsg;\n  },\n  zipCodePh: function(inputElement) {\n    var errorMsg = \"Please enter zipcode of 4 number characters\";\n    return /\\d{4}/.test(inputElement.value) && inputElement.value.length === 4\n      ? true\n      : errorMsg;\n  },\n  phoneNumber: function(inputElement) {\n    var errorMsg = \"Please enter 11-digit phone number starting with 09\";\n    return /^09\\d{9}/.test(inputElement.value) &&\n      inputElement.value.length === 11\n      ? true\n      : errorMsg;\n  }\n};\n","\"use strict\";\n\nvar validateFunction = function() {\n  return function() {\n    var validateInput = function(inputElement) {\n      // Extract index from id of input element of farm information\n      // to be used for the computed property\n      // of validations object\n      var index = inputElement.id.includes(\"[\")\n        ? inputElement.id.match(/\\d+/)[0]\n        : 1;\n\n      // Initialize needed validations\n      var validations = {\n        officeAddress_addressLine1: [\"required\"],\n        officeAddress_addressLine2: [\"required\"],\n        officeAddress_zipCode: [\"required\", \"zipCodePh\"],\n        // landline: ['landline'],\n        office_mobile: [\"required\", \"phoneNumber\"],\n        contactPerson_name: [\"required\"],\n        contactPerson_mobile: [\"required\", \"phoneNumber\"],\n        [\"farmAddress[\" + index + \"][addressLine1]\"]: [\"required\"],\n        [\"farmAddress[\" + index + \"][addressLine2]\"]: [\"required\"],\n        [\"farmAddress[\" + index + \"][zipCode]\"]: [\"required\", \"zipCodePh\"],\n        [\"farmAddress[\" + index + \"][farmType]\"]: [\"required\"],\n        [\"farmAddress[\" + index + \"][mobile]\"]: [\"required\", \"phoneNumber\"]\n      };\n\n      // Check if validation rules exist\n      if (validations[inputElement.id]) {\n        var result = true;\n\n        for (var i = 0; i < validations[inputElement.id].length; i++) {\n          var element = validations[inputElement.id][i];\n\n          // Split arguments if there are any\n          var method = element.includes(\":\") ? element.split(\":\") : element;\n\n          result =\n            typeof method === \"object\"\n              ? validationMethods[method[0]](inputElement, method[1])\n              : validationMethods[method](inputElement);\n\n          // Result would return to a string errorMsg if validation fails\n          if (result !== true) {\n            placeError(inputElement, result);\n            return false;\n          }\n        }\n\n        // If all validations succeed then\n        if (result === true) {\n          placeSuccess(inputElement);\n          return true;\n        }\n      }\n    };\n\n    // onfocusout events\n    $(\"body\").on(\"focusout\", \"input\", function(e) {\n      e.preventDefault();\n\n      validateInput(this);\n    });\n\n    // onkeyup events\n    $(\"body\").on(\"keyup\", \"input\", function(e) {\n      if ($(this).hasClass(\"invalid\") || $(this).hasClass(\"valid\"))\n        validateInput(this);\n    });\n\n    $(\"button[type='submit']\").click(function(e) {\n      e.preventDefault();\n\n      var officeAddress_addressLine1 = validateInput(\n        document.getElementById(\"officeAddress_addressLine1\")\n      );\n      var officeAddress_addressLine2 = validateInput(\n        document.getElementById(\"officeAddress_addressLine2\")\n      );\n      var officeAddress_zipCode = validateInput(\n        document.getElementById(\"officeAddress_zipCode\")\n      );\n      var office_mobile = validateInput(\n        document.getElementById(\"office_mobile\")\n      );\n      var contactPerson_name = validateInput(\n        document.getElementById(\"contactPerson_name\")\n      );\n      var contactPerson_mobile = validateInput(\n        document.getElementById(\"contactPerson_mobile\")\n      );\n\n      // Count how many current Farm Addresses are available\n      var farmNumber = $(\"#farm-address-body .add-farm\").length + 1;\n      var farmValid = true;\n\n      for (var i = 1; i < farmNumber; i++) {\n\n        var farm_addressLine1 = validateInput(\n          document.getElementById(\"farmAddress[\" + i + \"][addressLine1]\")\n        );\n        var farm_addressLine2 = validateInput(\n          document.getElementById(\"farmAddress[\" + i + \"][addressLine2]\")\n        );\n        var farm_zipCode = validateInput(\n          document.getElementById(\"farmAddress[\" + i + \"][zipCode]\")\n        );\n        var farmType = validateInput(\n          document.getElementById(\"farmAddress[\" + i + \"][farmType]\")\n        );\n        var farm_mobile = validateInput(\n          document.getElementById(\"farmAddress[\" + i + \"][mobile]\")\n        );\n\n        farmValid =\n          farmValid &&\n          farm_addressLine1 &&\n          farm_addressLine2 &&\n          farm_zipCode &&\n          farmType &&\n          farm_mobile;\n      }\n\n      // Submit if all validations are met\n      if (\n        officeAddress_addressLine1 &&\n        officeAddress_addressLine2 &&\n        officeAddress_zipCode &&\n        office_mobile &&\n        contactPerson_name &&\n        contactPerson_mobile &&\n        farmValid\n      ) {\n        $(this).addClass(\"disabled\");\n        $(this)\n          .parents(\"form\")\n          .submit();\n      } else Materialize.toast(\"Please properly fill all required fields.\", 2500, \"orange accent-2\");\n    });\n  };\n};\n\n$(document).ready(validateFunction());\n"]}