{"version":3,"sources":["profile.js","editProfile_script.js","formValidationMethods.js","editProfile_validation.js","show-hide-pw.js"],"names":[],"mappingsxtfile":"editProfile.js","sourcesContent":["'use strict';\n\nvar profile = {\n    edit_farm_name: '',\n\n    edit: function(parent_form, edit_button, cancel_button){\n\n        config.preloader_progress.fadeIn();\n        $.when(\n            parent_form.find('input, select').prop('disabled',false),\n            parent_form.find('select').material_select()\n        ).done(function(){\n            profile.edit_farm_name = edit_button.attr('data-tooltip');\n            // Edit tooltip animation to Done\n            edit_button.attr('data-tooltip','Done');\n            edit_button.attr('data-position','top');\n            edit_button.html('<i class=\"material-icons\">done</i>');\n            $(\".tooltipped\").tooltip({delay:50});\n            edit_button.prop('disabled', false);\n            cancel_button.toggle();\n            config.preloader_progress.fadeOut();\n        });\n\n    },\n\n    get_data_values: function(parent_form) {\n      var data_values;\n\n      // Determine if form is of personal or farm information\n      if (parent_form.attr('data-personal-id')) {\n        data_values = {\n          \"id\": parent_form.attr('data-personal-id'),\n          \"officeAddress_addressLine1\": parent_form.find('input[name=officeAddress_addressLine1]').val(),\n          \"officeAddress_addressLine2\": parent_form.find('input[name=officeAddress_addressLine2]').val(),\n          \"officeAddress_province\": parent_form.find('select[name=officeAddress_province] option:checked').val(),\n          \"officeAddress_zipCode\": parent_form.find('input[name=officeAddress_zipCode]').val(),\n          \"office_landline\": parent_form.find('input[name=office_landline]').val(),\n          \"office_mobile\": parent_form.find('input[name=office_mobile]').val(),\n          \"contactPerson_name\": parent_form.find('input[name=contactPerson_name]').val(),\n          \"contactPerson_mobile\": parent_form.find('input[name=contactPerson_mobile]').val(),\n          \"website\": parent_form.find('input[name=website]').val(),\n          \"produce\": parent_form.find('input[name=produce]').val(),\n          \"_token\": parent_form.find('input[name=_token]').val()\n        };\n      }\n      else if (parent_form.attr('data-farm-id')) {\n        var farm_address = [];\n        var details = {\n          \"addressLine1\": parent_form.find('input[name=addressLine1]').val(),\n          \"addressLine2\": parent_form.find('input[name=addressLine2]').val(),\n          \"province\": parent_form.find('input[class=select-dropdown]').val(),\n          \"zipCode\": parent_form.find('input[name=zipCode]').val(),\n          \"farmType\": parent_form.find('input[name=farmType]').val(),\n          \"landline\": parent_form.find('input[name=landline]').val(),\n          \"mobile\": parent_form.find('input[name=mobile]').val(),\n        };\n        farm_address.push({});\n        farm_address.push(details);\n\n        data_values = {\n          \"id\": parent_form.attr('data-farm-id'),\n          \"_token\": parent_form.find('input[name=_token]').val()\n        };\n        data_values[\"farmAddress\"] = farm_address;\n      }\n      \n      return data_values;\n\n    },\n\n    update: function(parent_form, edit_button, cancel_button){\n        config.preloader_progress.fadeIn();\n      \n      var data_values = this.get_data_values(parent_form)\n\n        // Do AJAX\n        $.ajax({\n            url: parent_form.attr('action'),\n            type: \"PUT\",\n            cache: false,\n            data: data_values,\n            success: function(data){\n                var data = JSON.parse(data);\n\n                parent_form.find('input').removeClass('valid');\n                parent_form.find('input, select').prop('disabled',true);\n                parent_form.find('.caret').addClass('disabled');\n\n                // Change the values of the input\n                if(parent_form.attr('data-personal-id')){\n                    parent_form.find('input[name=officeAddress_addressLine1]').val(data.officeAddress_addressLine1);\n                    parent_form.find('input[name=officeAddress_addressLine2]').val(data.officeAddress_addressLine2);\n                    parent_form.find('select[name=officeAddress_province]').val(data.officeAddress_province);\n                    parent_form.find('input[name=officeAddress_zipCode]').val(data.officeAddress_zipCode);\n                    parent_form.find('input[name=office_landline]').val(data.office_landline);\n                    parent_form.find('input[name=office_mobile]').val(data.office_mobile);\n                    parent_form.find('input[name=contactPerson_name]').val(data.contactPerson_name);\n                    parent_form.find('input[name=contactPerson_mobile]').val(data.contactPerson_mobile);\n                    parent_form.find('input[name=website]').val(data.website);\n                    parent_form.find('input[name=produce]').val(data.produce);\n\n                }\n                else if(parent_form.attr('data-farm-id')){\n                    parent_form.find('input[name=addressLine1]').val(data.addressLine1);\n                    parent_form.find('input[name=addressLine2]').val(data.addressLine2);\n                    parent_form.find('select[name=province]').val(data.province);\n                    parent_form.find('input[name=zipCode]').val(data.zipCode);\n                    parent_form.find('input[name=farmType]').val(data.farmType);\n                    parent_form.find('input[name=landline]').val(data.landline);\n                    parent_form.find('input[name=mobile]').val(data.mobile);\n                }\n\n                // Re-initialize Materialize select\n                parent_form.find('select').material_select();\n\n                // Done tooltip animation to Edit\n                edit_button.attr('data-tooltip',profile.edit_farm_name);\n                edit_button.attr('data-position','left');\n                edit_button.html('<i class=\"material-icons\">mode_edit</i>');\n                $(\".tooltipped\").tooltip({delay:50});\n                $('.edit-button').removeClass('disabled');\n                $('.cancel-button').removeClass('disabled');\n                edit_button.prop('disabled', false);\n                cancel_button.toggle();\n                config.preloader_progress.fadeOut();\n                Materialize.toast('Profile updated successfully!', 2000, 'green lighten-1');\n            },\n            error: function(message){\n                console.log(message['responseText']);\n                config.preloader_progress.fadeOut();\n            }\n        });\n    },\n\n    cancel: function(parent_form, edit_button, cancel_button){\n        config.preloader_progress.fadeIn();\n        cancel_button.tooltip('remove');\n        $.when(\n            parent_form.find('input').removeClass('valid'),\n            parent_form.find('input, select').prop('disabled',true),\n            parent_form.find('.caret').addClass('disabled')\n        ).done(function(){\n            // Done tooltip animation to Edit\n            edit_button.attr('data-tooltip',profile.edit_farm_name);\n            edit_button.attr('data-position','left');\n            edit_button.html('<i class=\"material-icons\">mode_edit</i>');\n            $(\".tooltipped\").tooltip({delay:50});\n            cancel_button.toggle();\n            config.preloader_progress.fadeOut();\n        });\n    },\n\n    remove: function(parent_form, row){\n        config.preloader_progress.fadeIn();\n\n        $.ajax({\n            url: parent_form.attr('action'),\n            type: \"DELETE\",\n            cache: false,\n            data: {\n                \"id\": parent_form.attr('data-farm-id'),\n                \"_token\": parent_form.find('input[name=_token]').val()\n            },\n            success: function(data){\n                if(data == 'OK') {\n                    row.remove();\n                    config.preloader_progress.fadeOut();\n                    Materialize.toast('Farm information removed',2000);\n                }\n                else {\n                    config.preloader_progress.fadeOut();\n                    Materialize.toast('Farm information removal unsuccessful', 2500, 'red');\n                }\n            },\n            error: function(message){\n                console.log(message['responseText']);\n                config.preloader_progress.fadeOut();\n            }\n        });\n\n    },\n\n    change_password: function(parent_form){\n        config.preloader_progress.fadeIn();\n\n        // Do AJAX\n        $.ajax({\n            url: parent_form.attr('action'),\n            type: \"PATCH\",\n            cache: false,\n            data: {\n                \"_token\": parent_form.find('input[name=_token]').val(),\n                \"current_password\": parent_form.find('input[name=current_password]').val(),\n                \"new_password\": parent_form.find('input[name=new_password]').val(),\n                \"new_password_confirmation\": parent_form.find('input[name=new_password_confirmation]').val()\n            },\n            success: function(data){\n                if(data === 'OK') {\n                    parent_form.find('input[name=current_password], input[name=new_password], input[name=new_password_confirmation]').val('');\n                    parent_form.find('label[for=current-password], label[for=new_password], label[for=new_password-confirm]').removeClass('active');\n                    parent_form.find('input[name=current_password], input[name=new_password], input[name=new_password_confirmation]').removeClass('valid');\n\n                    config.preloader_progress.fadeOut();\n                    Materialize.toast('Password change successful', 2000, 'green lighten-1');\n                }\n                else{\n                    config.preloader_progress.fadeOut();\n                    Materialize.toast('Password change unsuccessful', 2500, 'red');\n                }\n\n                $('#password-error-container').hide();\n                $('#change-password-button').removeClass('disabled');\n\n            },\n            error: function(message){\n                var error_messages = JSON.parse(message['responseText']),\n                    error_string = '';\n\n                parent_form.find('input[name=current_password], input[name=new_password], input[name=new_password_confirmation]').val('');\n                parent_form.find('label[for=current-password], label[for=new-password], label[for=new-password-confirm]').removeClass('active');\n                parent_form.find('input[name=current_password], input[name=new_password], input[name=new_password_confirmation]').removeClass('valid');\n\n                Object.keys(error_messages).forEach(function(element){\n                    error_string += error_messages[element][0] + '<br>';\n                });\n\n                $('#password-error-container').html(error_string);\n                $('#password-error-container').show();\n                $('#change-password-button').removeClass('disabled');\n\n                config.preloader_progress.fadeOut();\n            }\n        });\n\n    },\n\n    set_logo: function(parent_form, logo_dropzone){\n\n        // Check if there is image uploaded\n        if($('.dz-image-preview').first().attr('data-image-id')){\n\n            // Do AJAX\n            $.ajax({\n                url: config.breederLogo_url,\n                type: \"PATCH\",\n                cache: true,\n                data: {\n                    \"_token\": parent_form.find('input[name=_token]').val(),\n                    \"imageId\": $('.dz-image-preview').first().attr('data-image-id')\n                },\n                success: function(data){\n\n                    $('#logo-card .card-image img').attr('src', data);\n\n                    $('#change-logo-modal').modal('close');\n                    $('#confirm-change-logo').html('Set Logo');\n                    $('#confirm-change-logo').removeClass('disabled');\n\n                    // Clear the Dropzone\n                    var dropzoneFiles = logo_dropzone.files;\n                    for(var i = 0; i < dropzoneFiles.length; i++){\n                        if(dropzoneFiles[i].previewElement){\n                            var _ref = dropzoneFiles[i].previewElement;\n                            _ref.parentNode.removeChild(dropzoneFiles[i].previewElement);\n                        }\n                    }\n                    logo_dropzone.files = [];\n                    logo_dropzone.emit('reset');\n\n                    Materialize.toast('Logo updated', 2000, 'green lighten-1');\n                },\n                error: function(message){\n                    console.log(message['responseText']);\n                }\n            });\n        }\n        else{\n            $('#confirm-change-logo').html('Set Logo');\n            $('#confirm-change-logo').removeClass('disabled');\n        }\n\n    },\n\n    select_province: function(farmOrder){\n        // Dynamically produce select element with options based on provinces\n        var selectElement = '<select name=\"farmAddress[' + farmOrder + '][province]\">';\n\n        for(var key in provinces){\n            selectElement += '<option value=\"' + key + '\">' + key + '</option>';\n        }\n\n        selectElement += '</select>';\n\n        return selectElement;\n    }\n};\n","/*\n * Profile-related scripts\n */\n\n$(document).ready(function () {\n  /*\n   *\tUpdate Profile specific\n   */\n\n  Dropzone.options.logoDropzone = false;\n\n  var logoDropzone = new Dropzone('#logo-dropzone', {\n    paramName: 'logo',\n    uploadMultiple: false,\n    maxFiles: 1,\n    maxFilesize: 5,\n    acceptedFiles: \"image/png, image/jpeg, image/jpg\",\n    dictDefaultMessage:\n      `<h5 style='font-weight: 300;'> Drop an image here to upload </h5>\n      <i class='material-icons'>insert_photo</i>\n      <br> <h5 style='font-weight: 300;'> Or just click anywhere in this container to choose file </h5>`,\n    previewTemplate: document.getElementById('custom-preview').innerHTML,\n    init: function () {\n\n      // Inject attributes upon success of file upload\n      this.on('success', function (file, response) {\n        var response = JSON.parse(response);\n        var previewElement = file.previewElement;\n\n        previewElement.setAttribute('data-image-id', response.id);\n        file.name = response.name;\n        $('.dz-filename span[data-dz-name]').html(response.name);\n\n        $(\".tooltipped\").tooltip({ delay: 50 });\n      });\n\n      // Remove file from file system and database records\n      this.on('removedfile', function (file) {\n        console.log(file.previewElement);\n\n        if (file.previewElement.getAttribute('data-image-id')) {\n          // Do AJAX\n          $.ajax({\n            url: config.breederLogo_url,\n            type: \"DELETE\",\n            cache: false,\n            data: {\n              \"_token\": $('#logo-dropzone').find('input[name=_token]').val(),\n              \"imageId\": file.previewElement.getAttribute('data-image-id')\n            },\n            success: function (data) {\n\n            },\n            error: function (message) {\n              console.log(message['responseText']);\n            }\n          });\n        }\n      });\n\n    }\n  });\n\n  \n  // for enabling select tags\n  $(\"select\").material_select();\n\n  // Same address as office information feature\n  $(\".same-address-checker\").change(function (e) {\n    e.preventDefault();\n\n    var farm_specific = $(this).attr('class').split(' ')[1];\n    farm_specific = \"#\" + farm_specific;\n\n    var office_address1 = $(\"#officeAddress_addressLine1\").val();\n    var office_address2 = $(\"#officeAddress_addressLine2\").val();\n    var office_province = $(\"#office_provinces\").val();\n    var office_postal_zip_code = $(\"#officeAddress_zipCode\").val();\n    var office_landline = $(\"#office_landline\").val();\n    var office_mobile = $(\"#office_mobile\").val();\n\n    if ($(this).is(\":checked\")) {\n\n      // set values\n      $(farm_specific + \"-addressLine1\").val(office_address1).addClass('input-show-hide');\n      $(farm_specific + \"-addressLine2\").val(office_address2).addClass('input-show-hide');\n      $(farm_specific).find('input[class=select-dropdown]').val(office_province).addClass('input-show-hide');\n      $(farm_specific + \"-zipCode\").val(office_postal_zip_code).addClass('input-show-hide');\n      $(farm_specific + \"-landline\").val(office_landline).addClass('input-show-hide');\n      $(farm_specific + \"-mobile\").val(office_mobile).addClass('input-show-hide');\n    }\n    else {\n      $(farm_specific + \"-addressLine1\").val('').removeClass('input-show-hide');\n      $(farm_specific + \"-addressLine2\").val('').removeClass('input-show-hide');\n      // $(farm_specific).find('input[class=select-dropdown]').val('Abra').removeClass('input-show-hide');\n      $(farm_specific + \"-zipCode\").val('').removeClass('input-show-hide');\n      $(farm_specific + \"-farmType\").val('').removeClass('input-show-hide');\n      $(farm_specific + \"-landline\").val('').removeClass('input-show-hide');\n      $(farm_specific + \"-mobile\").val('').removeClass('input-show-hide');\n    }\n  });\n\n  // Change Logo\n  $(\"#change-logo\").on('click', function (e) {\n    e.preventDefault();\n\n    $(\"#change-logo-modal\").modal({ dismissible: false });\n    $(\"#change-logo-modal\").modal('open');\n  });\n\n  // Confirm Change Logo\n  $(\"#confirm-change-logo\").on('click', function (e) {\n    e.preventDefault();\n\n    $(this).html(\"Setting Logo...\");\n    $(this).addClass(\"disabled\");\n\n    profile.set_logo($('#logo-dropzone'), logoDropzone);\n  });\n\n  // Cancel on Editing a Personal/Farm Information\n  $('.cancel-button').click(function (e) {\n    e.preventDefault();\n    var cancel_button = $(this);\n    var edit_button = cancel_button.parents('.content-section').find('.edit-button');\n    var parent_form = cancel_button.parents('form');\n\n    profile.cancel(parent_form, edit_button, cancel_button);\n  });\n\n  // Remove an instance of the current farm information/s\n  $('.remove-farm').click(function (e) {\n    e.preventDefault();\n    var remove_button = $(this);\n    var parent_form = remove_button.parents('form');\n    var row = remove_button.parents('.add-farm');\n\n    //  Check if there are more than 1 farm information to remove\n    if ($('#farm-address-body').find('.delete-farm .remove-farm').length > 1) {\n      $('#confirmation-modal').modal('open');\n      $('#confirm-remove').click(function (e) {\n        e.preventDefault();\n        profile.remove(parent_form, row);\n      });\n      location.href = '#';\n    }\n    else Materialize.toast('At least 1 Farm information required', 2500, 'orange accent-2');\n  });\n\n});\n","\"use strict\";\n\n// Place error on specific HTML input\nvar placeError = function (inputElement, errorMsg) {\n  // Parse id of element if it contains '-' for the special\n  // case of finding the input's respective\n  // label on editProfile pages\n  var inputId =\n    inputElement.id.includes(\"-\") && /\\d/.test(inputElement.id)\n      ? inputElement.id.split(\"-\")[2]\n      : inputElement.id;\n\n  $(inputElement)\n    .parents(\"form\")\n    .find(\"label[for='\" + inputId + \"']\")\n    .attr(\"data-error\", errorMsg);\n\n  setTimeout(function () {\n    if (inputElement.id.includes(\"select\")) {\n      // For select input, find first its respective input text\n      // then add the 'invalid' class\n      $(inputElement)\n        .parents(\".select-wrapper\")\n        .find(\"input.select-dropdown\")\n        .addClass(\"invalid\");\n\n      if (inputId === \"select-type\") {\n        /* Show the validation error  */\n        $(\"#select-type-data-error\").show();\n        $(\"#select-type\").on('change', function () {\n          /* Remove validation error if an option is selected */\n          $(\"#select-type-data-error\").hide();\n        });\n      }\n      else if (inputId === \"select-farm\") {\n        /* Show the validation error  */\n        $(\"#select-farm-data-error\").show();\n        $(\"#select-farm\").on('change', function () {\n          /* Remove validation error if an option is selected */\n          $(\"#select-farm-data-error\").hide();\n        });\n      }\n\n    }\n    else $(inputElement).addClass(\"invalid\");\n  }, 0);\n};\n\n// Place success from specific HTML input\nvar placeSuccess = function (inputElement) {\n  // For select input, find first its respective input text\n  // then add the needed classes\n  var inputTextFromSelect = inputElement.id.includes(\"select\")\n    ? $(inputElement)\n      .parents(\".select-wrapper\")\n      .find(\"input.select-dropdown\")\n    : \"\";\n\n  // Check first if it is invalid\n  if (\n    $(inputElement).hasClass(\"invalid\") ||\n    $(inputTextFromSelect).hasClass(\"invalid\")\n  ) {\n    $(inputElement)\n      .parents(\"form\")\n      .find(\"label[for='\" + inputElement.id + \"']\")\n      .attr(\"data-error\", false);\n\n    setTimeout(function () {\n      if (inputElement.id.includes(\"select\"))\n        inputTextFromSelect.removeClass(\"invalid\").addClass(\"valid\");\n      else\n        $(inputElement)\n          .removeClass(\"invalid\")\n          .addClass(\"valid\");\n    }, 0);\n  } else {\n    if (inputElement.id.includes(\"select\"))\n      inputTextFromSelect.addClass(\"valid\");\n    else $(inputElement).addClass(\"valid\");\n  }\n};\n\nvar validationMethods = {\n  // functions must return either true or the errorMsg only\n  required: function (inputElement) {\n    var errorMsg;\n    if (inputElement.name === \"name\") errorMsg = \"Please enter product name\";\n    else errorMsg = \"This field is required\";\n\n    return inputElement.value ? true : errorMsg;\n  },\n  requiredUserName: function (inputElement) {\n    var errorMsg = \"This field is required\";\n    return inputElement.value ? true : errorMsg;\n  },\n  requiredIfRadio: function (inputElement, radioId) {\n    var errorMsg;\n    if (\n      inputElement.name === \"breed\" ||\n      inputElement.name === \"fbreed\" ||\n      inputElement.name === \"mbreed\"\n    ) {\n      errorMsg = \"Please enter swine breed\";\n    } else errorMsg = \"This field is required.\";\n\n    var radioInputElement = document.getElementById(radioId);\n    if (radioInputElement.checked) return inputElement.value ? true : errorMsg;\n    else return true;\n  },\n  requiredDropdown: function (inputElement) {\n    var errorMsg = \"This field is required\";\n    return inputElement.value ? true : errorMsg;\n  },\n  email: function (inputElement) {\n    var errorMsg = \"Please enter a valid email address\";\n    return /\\S+@\\S+\\.\\S+/.test(inputElement.value) ? true : errorMsg;\n  },\n  minLength: function (inputElement, min) {\n    var errorMsg = \"Please enter \" + min + \" or more characters\";\n    return inputElement.value.length >= min ? true : errorMsg;\n  },\n  equalTo: function (inputElement, compareInputElementId) {\n    var errorMsg = \"Please enter the same value\";\n    var compareInputElement = document.getElementById(compareInputElementId);\n    return inputElement.value === compareInputElement.value ? true : errorMsg;\n  },\n  zipCodePh: function (inputElement) {\n    var errorMsg = \"Please enter zipcode of 4 number characters\";\n    return /\\d{4}/.test(inputElement.value) && inputElement.value.length === 4\n      ? true\n      : errorMsg;\n  },\n  phoneNumber: function (inputElement) {\n    var errorMsg = \"Please enter 11-digit phone number starting with 09\";\n    return /^09\\d{9}/.test(inputElement.value) &&\n      inputElement.value.length === 11\n      ? true\n      : errorMsg;\n  }\n};\n","'use strict';\n\nvar validateFunction = function(){\n\n    return function(){\n        var validateInput = function(inputElement){\n\n            // Extract index from id of input element of existing(/to be added) farm information\n            // to be used for the computed property\n            // of validations object\n            var index = 1;\n            index = (inputElement.id.includes('-')) ? inputElement.id.match(/\\d+/)[0]: index;\n            index = (inputElement.id.includes('[')) ? inputElement.id.match(/\\d+/)[0]: index;\n\n            // Initialize needed validations\n            var validations = {\n                officeAddress_addressLine1: ['required'],\n                officeAddress_addressLine2: ['required'],\n                officeAddress_zipCode: ['required', 'zipCodePh'],\n                // landline: ['landline'],\n                office_mobile: ['required', 'phoneNumber'],\n                contactPerson_name: ['required'],\n                contactPerson_mobile: ['required', 'phoneNumber'],\n                ['farm-' + index + '-addressLine1']: ['required'],\n                ['farm-' + index + '-addressLine2']: ['required'],\n                ['farm-' + index + '-zipCode']: ['required', 'zipCodePh'],\n                ['farm-' + index + '-farmType']: ['required'],\n                ['farm-' + index + '-mobile']: ['required', 'phoneNumber'],\n                'currentpassword': ['required'],\n                'newpassword': ['required', 'minLength:8'],\n                'newpasswordconfirm': ['required', 'equalTo:newpassword']\n            };\n\n            // Check if validation rules exist\n            if(validations[inputElement.id]){\n                var result = true;\n\n                for (var i = 0; i < validations[inputElement.id].length; i++) {\n                    var element = validations[inputElement.id][i];\n\n                    // Split arguments if there are any\n                    var method = element.includes(':') ? element.split(':') : element;\n\n                    result = (typeof(method) === 'object')\n                        ? (validationMethods[method[0]](inputElement, method[1]))\n                        : (validationMethods[method](inputElement));\n\n                    // Result would return to a string errorMsg if validation fails\n                    if(result !== true){\n                        placeError(inputElement, result);\n                        return false;\n                    }\n                }\n\n                // If all validations succeed then\n                if(result === true){\n                    placeSuccess(inputElement);\n                    return true;\n                }\n            }\n        };\n\n        // onfocusout and keyup events on\n        // personal-information and\n        // farm-information\n        // input only\n        $('body').on('focusout keyup', '#personal-information input, #farm-information input', function(e){\n            validateInput(this);\n        });\n\n        // keyup event on changing of password\n        $('#password-information input').focusout(function(){\n            if($(this).val()) validateInput(this);\n        })\n\n        $('#password-information input').keyup(function(){\n            validateInput(this);\n        });\n\n        // Edit on Personal/Farm Information\n        $('.edit-button').click(function(e){\n            e.preventDefault();\n            \n            var edit_button = $(this);\n            var cancel_button = edit_button.parents('.content-section').find('.cancel-button');\n            var parent_form = edit_button.parents('form');\n            \n            edit_button.tooltip('remove');\n\n            // If button is for editing the fields\n            if(edit_button.attr('data-tooltip').includes('Edit'))profile.edit(parent_form, edit_button, cancel_button);\n\n            // If button is ready for submission\n            else {\n\n                // Determine if form is of personal or farm information\n                if (parent_form.attr('data-personal-id')) {\n\n                    // Check if required fields are properly filled\n                    var officeAddress_addressLine1 = validateInput(document.getElementById('officeAddress_addressLine1'));\n                    var officeAddress_addressLine2 = validateInput(document.getElementById('officeAddress_addressLine2'));\n                    var officeAddress_zipCode = validateInput(document.getElementById('officeAddress_zipCode'));\n                    var office_mobile = validateInput(document.getElementById('office_mobile'));\n                    var contactPerson_name = validateInput(document.getElementById('contactPerson_name'));\n                    var contactPerson_mobile = validateInput(document.getElementById('contactPerson_mobile'));\n\n                    // Submit if all validations are met\n                    if(officeAddress_addressLine1 && officeAddress_addressLine2 && officeAddress_zipCode && contactPerson_name && contactPerson_mobile){\n                        $('.edit-button').addClass('disabled');\n                        $('.cancel-button').addClass('disabled');\n                        profile.update(parent_form, edit_button, cancel_button);\n                    }\n                    else Materialize.toast('Please properly fill all required fields.', 2500, 'orange accent-2');\n                }\n                else if(parent_form.attr('data-farm-id')){\n\n                    // Check if required fields are properly filled\n                    // Count how many current Farm Addresses are available\n                    var farmNumber = parent_form.attr('data-farm-order');\n                    var farmValid = true;\n\n                    var farm_addressLine1 = validateInput(document.getElementById('farm-' + farmNumber + '-addressLine1'));\n                    var farm_addressLine2 = validateInput(document.getElementById('farm-' + farmNumber + '-addressLine2'));\n                    var farm_zipCode = validateInput(document.getElementById('farm-' + farmNumber + '-zipCode'));\n                    var farmType = validateInput(document.getElementById('farm-' + farmNumber + '-farmType'));\n                    var farm_mobile = validateInput(document.getElementById('farm-' + farmNumber + '-mobile'));\n\n                    farmValid = farmValid && farm_addressLine1 && farm_addressLine2 && farm_zipCode && farmType && farm_mobile;\n\n                    // Submit if all validations are met\n                    if(farmValid){\n                        $('.edit-button').addClass('disabled');\n                        $('.cancel-button').addClass('disabled');\n                        profile.update(parent_form, edit_button, cancel_button);\n                    }\n                    else Materialize.toast('Please properly fill all required fields.', 2500, 'orange accent-2');\n                }\n            }\n\n        });\n\n        // Change password\n        $('#change-password-button').click(function(e){\n            e.preventDefault();\n\n            var currentPassword = validateInput(document.getElementById('currentpassword'));\n            var newPassword = validateInput(document.getElementById('newpassword'));\n            var newPasswordConfirm = validateInput(document.getElementById('newpasswordconfirm'));\n\n            if(currentPassword && newPassword && newPasswordConfirm){\n                $(this).addClass('disabled');\n                profile.change_password($('#change-password-form'));\n            }\n        });\n\n    }\n}\n\n$(document).ready(validateFunction());\n","$(document).ready(function () {\n\n  /*\n    Toggles eye icon button that shows/hide \n    password\n  */\n  $('.show-hide-password').click(function () {\n\n    var password_field = $('.login-password');\n    \n    // change eye icon and show password text\n    if ($('#show-hide-password-icon').text() === 'visibility') {\n      $('#show-hide-password-icon').text('visibility_off');\n      password_field.attr('type', 'text');\n    }   \n\n    // change eye icon and hide password text\n    else {\n      $('#show-hide-password-icon').text('visibility');\n      password_field.attr('type', 'password');\n    }\n  });\n});\n"]}