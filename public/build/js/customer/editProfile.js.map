{"version":3,"sources":["profile.js","editProfile_script.js","formValidationMethods.js","editProfile_validation.js"],"names":[],"mappingspRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9KA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"editProfile.js","sourcesContent":["'use strict';\n\nvar profile = {\n    edit_farm_name: '',\n\n    add: function(parent_form){\n        config.preloader_progress.fadeIn();\n        var farm_address = [];\n        var data_values = {\n            \"_token\" : parent_form.find('input[name=_token]').val()\n        };\n\n        farm_address.push({});\n        $(parent_form).find('.add-farm').map(function (index) {\n            var details = {\n                'name': $(this).find('input[name=\"farmAddress[' + (index+1) + '][name]\"]').val(),\n                'addressLine1': $(this).find('input[name=\"farmAddress[' + (index+1) + '][addressLine1]\"]').val(),\n                'addressLine2': $(this).find('input[name=\"farmAddress[' + (index+1) + '][addressLine2]\"]').val(),\n                'province': $(this).find('select[name=\"farmAddress[' + (index+1) + '][province]\"] option:checked').val(),\n                'zipCode': $(this).find('input[name=\"farmAddress[' + (index+1) + '][zipCode]\"]').val(),\n                'farmType': $(this).find('input[name=\"farmAddress[' + (index+1) + '][farmType]\"]').val(),\n                'landline': $(this).find('input[name=\"farmAddress[' + (index+1) + '][landline]\"]').val(),\n                'mobile': $(this).find('input[name=\"farmAddress[' + (index+1) + '][mobile]\"]').val()\n            };\n            farm_address.push(details);\n        });\n\n        data_values[\"farmAddress\"] = farm_address;\n\n        // Do AJAX\n        $.ajax({\n            url: parent_form.attr('action'),\n            type: \"POST\",\n            cache: false,\n            data: data_values,\n            success: function(data){\n                var data = JSON.parse(data);\n                Materialize.toast('Profile updated Success!', 1500, 'green lighten-1');\n                window.setTimeout(function(){\n                    config.preloader_progress.fadeOut();\n                    location.reload(true);\n                }, 1500);\n            },\n            error: function(message){\n                console.log(message['responseText']);\n                config.preloader_progress.fadeOut();\n            }\n        });\n    },\n\n    edit: function(parent_form, edit_button, cancel_button){\n        config.preloader_progress.fadeIn();\n        $.when(\n            parent_form.find('input, select').prop('disabled',false),\n            parent_form.find('select').material_select()\n        ).done(function(){\n            profile.edit_farm_name = edit_button.attr('data-tooltip');\n            // Edit tooltip animation to Done\n            edit_button.attr('data-tooltip','Done');\n            edit_button.attr('data-position','top');\n            edit_button.html('<i class=\"material-icons\">done</i>');\n            $(\".tooltipped\").tooltip({delay:50});\n            edit_button.prop('disabled', false);\n            cancel_button.toggle();\n            config.preloader_progress.fadeOut();\n        });\n    },\n\n    update: function(parent_form, edit_button, cancel_button){\n        config.preloader_progress.fadeIn();\n        var data_values;\n\n        // Determine if form is of personal or farm information\n        if(parent_form.attr('data-personal-id')){\n            data_values = {\n                \"id\": parent_form.attr('data-personal-id'),\n                \"address_addressLine1\": parent_form.find('input[name=address_addressLine1]').val(),\n                \"address_addressLine2\": parent_form.find('input[name=address_addressLine2]').val(),\n                \"address_province\": parent_form.find('select[name=address_province] option:checked').val(),\n                \"address_zipCode\": parent_form.find('input[name=address_zipCode]').val(),\n                \"landline\": parent_form.find('input[name=landline]').val(),\n                \"mobile\": parent_form.find('input[name=mobile]').val(),\n                \"_token\": parent_form.find('input[name=_token]').val()\n            };\n        }\n        else if (parent_form.attr('data-farm-id')) {\n            var farm_address = [];\n            var details = {\n                \"name\": parent_form.find('input[name=name]').val(),\n                \"addressLine1\": parent_form.find('input[name=addressLine1]').val(),\n                \"addressLine2\": parent_form.find('input[name=addressLine2]').val(),\n                \"province\": parent_form.find('select[name=province] option:checked').val(),\n                \"zipCode\": parent_form.find('input[name=zipCode]').val(),\n                \"farmType\": parent_form.find('input[name=farmType]').val(),\n                \"landline\": parent_form.find('input[name=landline]').val(),\n                \"mobile\": parent_form.find('input[name=mobile]').val(),\n            };\n            farm_address.push({});\n            farm_address.push(details);\n\n            data_values = {\n                    \"id\": parent_form.attr('data-farm-id'),\n                \"_token\": parent_form.find('input[name=_token]').val()\n            };\n            data_values[\"farmAddress\"] = farm_address;\n        }\n\n        // Do AJAX\n        $.ajax({\n            url: parent_form.attr('action'),\n            type: \"PUT\",\n            cache: false,\n            data: data_values,\n            success: function(data){\n                var data = JSON.parse(data);\n\n                parent_form.find('input').removeClass('valid');\n                parent_form.find('input, select').prop('disabled',true);\n                parent_form.find('.caret').addClass('disabled');\n\n                // Change the values of the input\n                if(parent_form.attr('data-personal-id')){\n                    parent_form.find('input[name=address_addressLine1]').val(data.address_addressLine1);\n                    parent_form.find('input[name=address_addressLine2]').val(data.address_addressLine2);\n                    parent_form.find('select[name=address_province]').val(data.address_province);\n                    parent_form.find('input[name=address_zipCode]').val(data.address_zipCode);\n                    parent_form.find('input[name=landline]').val(data.landline);\n                    parent_form.find('input[name=mobile]').val(data.mobile);\n                }\n                else if(parent_form.attr('data-farm-id')){\n                    parent_form.find('input[name=name]').val(data.name);\n                    parent_form.find('.farm-title').html(data.name);\n                    parent_form.find('input[name=addressLine1]').val(data.addressLine1);\n                    parent_form.find('input[name=addressLine2]').val(data.addressLine2);\n                    parent_form.find('select[name=province]').val(data.province);\n                    parent_form.find('input[name=zipCode]').val(data.zipCode);\n                    parent_form.find('input[name=farmType]').val(data.farmType);\n                    parent_form.find('input[name=landline]').val(data.landline);\n                    parent_form.find('input[name=mobile]').val(data.mobile);\n                }\n\n                // Re-initialize Materialize select\n                parent_form.find('select').material_select();\n\n                // Done tooltip animation to Edit\n                edit_button.attr('data-tooltip',profile.edit_farm_name);\n                edit_button.attr('data-position','left');\n                edit_button.html('<i class=\"material-icons\">mode_edit</i>');\n                $(\".tooltipped\").tooltip({delay:50});\n                $('.edit-button').removeClass('disabled');\n                $('.cancel-button').removeClass('disabled');\n                edit_button.prop('disabled', false);\n                cancel_button.toggle();\n                config.preloader_progress.fadeOut();\n                Materialize.toast('Profile updated successfully!', 2000, 'green lighten-1');\n            },\n            error: function(message){\n                console.log(message['responseText']);\n                config.preloader_progress.fadeOut();\n            }\n        });\n    },\n\n    cancel: function(parent_form, edit_button, cancel_button){\n        config.preloader_progress.fadeIn();\n        cancel_button.tooltip('remove');\n        $.when(\n            parent_form.find('input').removeClass('valid'),\n            parent_form.find('input, select').prop('disabled',true),\n            parent_form.find('.caret').addClass('disabled')\n        ).done(function(){\n            // Done tooltip animation to Edit\n            edit_button.attr('data-tooltip',profile.edit_farm_name);\n            edit_button.attr('data-position','left');\n            edit_button.html('<i class=\"material-icons\">mode_edit</i>');\n            $(\".tooltipped\").tooltip({delay:50});\n            cancel_button.toggle();\n            config.preloader_progress.fadeOut();\n        });\n    },\n\n    remove: function(parent_form, row){\n        config.preloader_progress.fadeIn();\n\n        $.ajax({\n            url: parent_form.attr('action'),\n            type: \"DELETE\",\n            cache: false,\n            data: {\n                \"id\": parent_form.attr('data-farm-id'),\n                \"_token\": parent_form.find('input[name=_token]').val()\n            },\n            success: function(data){\n                if(data == 'OK') {\n                    row.remove();\n                    config.preloader_progress.fadeOut();\n                    Materialize.toast('Farm information removed',2000);\n                }\n                else{\n                    config.preloader_progress.fadeOut();\n                    Materialize.toast('Farm information removal unsuccessful', 2500, 'red');\n                }\n            },\n            error: function(message){\n                console.log(message['responseText']);\n                config.preloader_progress.fadeOut();\n            }\n        });\n    },\n\n    change_password: function(parent_form){\n        config.preloader_progress.fadeIn();\n\n        $.ajax({\n            url: parent_form.attr('action'),\n            type: \"PATCH\",\n            cache: false,\n            data: {\n                \"_token\": parent_form.find('input[name=_token]').val(),\n                \"current_password\": parent_form.find('input[name=current_password]').val(),\n                \"new_password\": parent_form.find('input[name=new_password]').val(),\n                \"new_password_confirmation\": parent_form.find('input[name=new_password_confirmation]').val()\n            },\n            success: function(data){\n                if(data === 'OK') {\n                    parent_form.find('input[name=current_password], input[name=new_password], input[name=new_password_confirmation]').val('');\n                    parent_form.find('label[for=current-password], label[for=new_password], label[for=new_password-confirm]').removeClass('active');\n                    parent_form.find('input[name=current_password], input[name=new_password], input[name=new_password_confirmation]').removeClass('valid');\n\n                    config.preloader_progress.fadeOut();\n                    Materialize.toast('Password change successful', 2000, 'green lighten-1');\n                }\n                else{\n                    config.preloader_progress.fadeOut();\n                    Materialize.toast('Password change unsuccessful', 2500, 'red');\n                }\n\n                $('#password-error-container').hide();\n                $('#change-password-button').removeClass('disabled');\n\n            },\n            error: function(message){\n                var error_messages = JSON.parse(message['responseText']),\n                    error_string = '';\n\n                parent_form.find('input[name=current_password], input[name=new_password], input[name=new_password_confirmation]').val('');\n                parent_form.find('label[for=current-password], label[for=new-password], label[for=new-password-confirm]').removeClass('active');\n                parent_form.find('input[name=current_password], input[name=new_password], input[name=new_password_confirmation]').removeClass('valid');\n\n                Object.keys(error_messages).forEach(function(element){\n                    error_string += error_messages[element][0] + '<br>';\n                });\n\n                $('#password-error-container').html(error_string);\n                $('#password-error-container').show();\n                $('#change-password-button').removeClass('disabled');\n\n                config.preloader_progress.fadeOut();\n            }\n        });\n\n    },\n\n    select_province: function(farmOrder){\n        // Dynamically produce select element with options based on provinces\n        var selectElement = '<select name=\"farmAddress[' + farmOrder + '][province]\">';\n\n        for(var key in provinces){\n            selectElement += '<option value=\"' + key + '\">' + key + '</option>';\n        }\n\n        selectElement += '</select>';\n\n        return selectElement;\n    }\n};\n","/*\n * Profile-related scripts\n */\n\n$(document).ready(function(){\n    /*\n     *\tUpdate Profile specific\n     */\n\n    // Add another Farm Address\n    $(\"#add-farm\").on('click',function(e){\n        e.preventDefault();\n\n        // Count how many current Farm Addresses are available\n        var i = $('#farm-address-body .add-farm').length+1;\n\n        // Count how many current Farm Addresses will be added\n        var j = $('#create-profile .add-farm').length+1;\n\n        // Check if there is a #submit-button button and remove it\n        if($('#create-profile').has('#submit-button')) $('#submit-button').remove().fadeOut('slow');\n\n        // Append inputs for another Farm Address in the Farm Information form\n        $('<div class=\"row add-farm\" style=\"display:none;\">'+\n         '<div class=\"col s10 offset-s1\">'+\n             '<div id=\"farm-'+i+'\" class=\"card-panel hoverable\">'+\n                 '<h5 class=\"center-align\"> New Farm '+i+' </h5>'+\n\n                 '<div class=\"row\">'+\n                 //  Farm Address: Name\n                     '<div class=\"input-field col s10 push-s1\">'+\n                         '<input name=\"farmAddress['+j+'][name]\" id=\"farmAddress['+j+'][name]\" type=\"text\">'+\n                         '<label for=\"farmAddress['+j+'][name]\">Name</label>'+\n                     '</div>'+\n                 '</div>'+\n\n                 '<div class=\"row\">'+\n                 // Farm Address: Street Address\n                     '<div class=\"input-field col s10 push-s1\">'+\n                         '<input name=\"farmAddress['+j+'][addressLine1]\" id=\"farmAddress['+j+'][addressLine1]\" type=\"text\">'+\n                         '<label for=\"farmAddress['+j+'][addressLine1]\">Address Line 1* : Street, Road, Subdivision</label>'+\n                     '</div>'+\n                 '</div>'+\n\n                 '<div class=\"row\">'+\n                 // Farm Address: Address Line 2\n                     '<div class=\"input-field col s10 push-s1\">'+\n                         '<input name=\"farmAddress['+j+'][addressLine2]\" id=\"farmAddress['+j+'][addressLine2]\" type=\"text\">'+\n                         '<label for=\"farmAddress['+j+'][addressLine2]\">Address Line 2* : Barangay, Town, City</label>'+\n                     '</div>'+\n                 '</div>'+\n\n                 '<div class=\"row\">'+\n                     // Farm Address: Province\n                     '<div class=\"input-field col s5 push-s1\">'+\n                         profile.select_province(j) +\n                         '<label>Province*</label>'+\n                     '</div>'+\n\n                     // Farm Address: Zip Code\n                     '<div class=\"input-field col s5 push-s1\">'+\n                         '<input name=\"farmAddress['+j+'][zipCode]\" id=\"farmAddress['+j+'][zipCode]\" type=\"text\">'+\n                         '<label for=\"farmAddress['+j+'][zipCode]\">Postal/ZIP Code*</label>'+\n                     '</div>'+\n                 '</div>'+\n\n\n                 '<div class=\"row\">'+\n                     // Farm Type\n                     '<div class=\"input-field col s5 push-s1\">'+\n                         '<input name=\"farmAddress['+j+'][farmType]\" id=\"farmAddress['+j+'][farmType]\" type=\"text\">'+\n                         '<label for=\"farmAddress['+j+'][farmType]\">Farm Type*</label>'+\n                     '</div>'+\n                 '</div>'+\n\n\n                 '<div class=\"row\">'+\n                     // Farm Landline\n                     '<div class=\"input-field col s5 push-s1\">'+\n                         '<input name=\"farmAddress['+j+'][landline]\" id=\"farmAddress['+j+'][landline]\" type=\"text\">'+\n                         '<label for=\"farmAddress['+j+'][landline]\">Landline</label>'+\n                     '</div>'+\n\n                     // Farm Mobile\n                     '<div class=\"input-field col s5 push-s1\">'+\n                         '<input name=\"farmAddress['+j+'][mobile]\" id=\"farmAddress['+j+'][mobile]\" type=\"text\">'+\n                         '<label for=\"farmAddress['+j+'][mobile]\">Mobile*</label>'+\n                     '</div>'+\n                 '</div>'+\n\n                 '<div class=\"row\">'+\n                   '<div class=\"col s10 offset-s1 content-section\">'+\n                       '<div class=\"col right submit-button-field\">'+\n                           '<button id=\"submit-button\" class=\"btn-floating btn-medium waves-effect waves-light teal darken-1 tooltipped\" data-position=\"left\" data-delay=\"50\" data-tooltip=\"Submit added farm/s\">'+\n                               '<i class=\"material-icons\">send</i>'+\n                           '</button>'+\n                       '</div>'+\n                   '</div>'+\n                 '</div>'+\n                 '<div class=\"row \">'+\n                     '<div class=\"col offset-s10\">'+\n                         '<a href=\"#\" class=\"btn-floating btn-medium waves-effect waves-light grey tooltipped remove-farm on-create-farm\" data-position=\"left\" data-delay=\"50\" data-tooltip=\"Remove New Farm '+i+'\">'+\n                             '<i class=\"material-icons\">remove</i>'+\n                         '</a>'+\n                     '</div>'+\n                 '</div>'+\n             '</div>'+\n         '</div>'+\n        '</div>').appendTo('#create-profile').fadeIn('slow');\n\n        $('#create-profile select').material_select();\n        location.href = '#farm-'+i;\n        $(\".remove-farm, #submit-button\").tooltip({delay:50});\n        Materialize.toast('New Farm Information added', 2000);\n    });\n\n    // Cancel on Editing a Personal/Farm Information\n    $('.cancel-button').click(function(e){\n        e.preventDefault();\n        var cancel_button = $(this);\n        var edit_button = cancel_button.parents('.content-section').find('.edit-button');\n        var parent_form = cancel_button.parents('form');\n\n        profile.cancel(parent_form, edit_button, cancel_button);\n    });\n\n    // Remove an instance of the current farm information/s\n    $('.remove-farm').click(function(e){\n        e.preventDefault();\n        var remove_button = $(this);\n        var parent_form = remove_button.parents('form');\n        var row = remove_button.parents('.add-farm');\n\n        //  Check if there are more than 1 farm information to remove\n        if($('#farm-address-body').find('.delete-farm .remove-farm').length > 1){\n            $('#confirmation-modal').modal('open');\n            $('#confirm-remove').click(function(e){\n                e.preventDefault();\n                profile.remove(parent_form,row);\n            });\n            location.href = '#';\n        }\n        else Materialize.toast('At least 1 Farm information required', 2500, 'orange accent-2');\n    });\n\n    // Remove an instance of added farm information\n    $('body').on('click', '.remove-farm' ,function(e){\n        e.preventDefault();\n        var remove_button = $(this);\n        remove_button.tooltip('remove');\n\n        // Check if remove_button is on creating farm information\n        if(remove_button.hasClass('on-create-farm')){\n            var prev_farm, prev_submit_button_field;\n            var row = remove_button.parents('.add-farm');\n            var name = row.find('h5').html();\n\n            row.remove().done;\n            prev_farm = $('#farm-address-body').find('.add-farm').last();\n            prev_submit_button_field = prev_farm.find(\".submit-button-field\");\n\n            if (prev_submit_button_field){\n                $( '<button class=\"btn-floating btn-medium waves-effect waves-light teal darken-1 tooltipped submit-button\" data-position=\"left\" data-delay=\"50\" data-tooltip=\"Submit added farms\">'+\n                     '<i class=\"material-icons\">send</i>'+\n                 '</button>').appendTo(prev_submit_button_field).fadeIn('slow');\n                $('.tooltipped').tooltip({delay:50});\n            }\n\n            location.href = '#'+prev_farm.find('.card-panel').attr('id');\n            Materialize.toast(name+' Information removed', 2000);\n        }\n    });\n\n});\n","'use strict';\n\n// Place error on specific HTML input\nvar placeError = function(inputElement, errorMsg){\n    // Parse id of element if it contains '-' for the special\n    // case of finding the input's respective\n    // label on editProfile pages\n    var inputId = (inputElement.id.includes('-') && /\\d/.test(inputElement.id))\n        ? (inputElement.id.split('-')[2])\n        : inputElement.id;\n\n    $(inputElement)\n        .parents(\"form\")\n        .find(\"label[for='\" + inputId + \"']\")\n        .attr('data-error', errorMsg);\n\n    setTimeout(function(){\n        if(inputElement.id.includes('select')){\n            // For select input, find first its respective input text\n            // then add the 'invalid' class\n            $(inputElement)\n                .parents('.select-wrapper')\n                .find('input.select-dropdown')\n                .addClass('invalid');\n        }\n        else $(inputElement).addClass('invalid');\n    },0);\n};\n\n// Place success from specific HTML input\nvar placeSuccess = function(inputElement){\n\n    // For select input, find first its respective input text\n    // then add the needed classes\n    var inputTextFromSelect = (inputElement.id.includes('select')) ? $(inputElement).parents('.select-wrapper').find('input.select-dropdown') : '';\n\n    // Check first if it is invalid\n    if($(inputElement).hasClass('invalid') || $(inputTextFromSelect).hasClass('invalid')){\n        $(inputElement)\n            .parents(\"form\")\n            .find(\"label[for='\" + inputElement.id + \"']\")\n            .attr('data-error', false);\n\n        setTimeout(function(){\n            if(inputElement.id.includes('select')) inputTextFromSelect.removeClass('invalid').addClass('valid');\n            else $(inputElement).removeClass('invalid').addClass('valid');\n        },0);\n    }\n    else {\n        if(inputElement.id.includes('select')) inputTextFromSelect.addClass('valid');\n        else $(inputElement).addClass('valid');\n    }\n}\n\nvar validationMethods = {\n    // functions must return either true or the errorMsg only\n    required: function(inputElement){\n        var errorMsg = 'This field is required';\n        return inputElement.value ? true : errorMsg;\n    },\n    requiredIfRadio: function(inputElement, radioId){\n        var errorMsg = 'This field is required';\n        var radioInputElement = document.getElementById(radioId);\n        if(radioInputElement.checked) return inputElement.value ? true : errorMsg;\n        else return true;\n    },\n    requiredDropdown: function(inputElement){\n        var errorMsg = 'This field is required';\n        return inputElement.value ? true : errorMsg;\n    },\n    email: function(inputElement){\n        var errorMsg = 'Please enter a valid email address';\n        return /\\S+@\\S+\\.\\S+/.test(inputElement.value) ? true : errorMsg;\n    },\n    minLength: function(inputElement, min){\n        var errorMsg = 'Please enter ' + min + ' or more characters';\n        return (inputElement.value.length >= min) ? true : errorMsg;\n    },\n    equalTo: function(inputElement, compareInputElementId){\n        var errorMsg = 'Please enter the same value';\n        var compareInputElement = document.getElementById(compareInputElementId);\n        return (inputElement.value === compareInputElement.value) ? true : errorMsg;\n    },\n    zipCodePh: function(inputElement){\n        var errorMsg = 'Please enter zipcode of 4 number characters';\n        return (/\\d{4}/.test(inputElement.value) && inputElement.value.length === 4) ? true : errorMsg;\n    },\n    phoneNumber: function(inputElement){\n        var errorMsg = 'Please enter 11-digit phone number starting with 09';\n        return (/^09\\d{9}/.test(inputElement.value) && inputElement.value.length === 11)  ? true : errorMsg;\n    }\n\n};\n","'use strict';\n\nvar validateFunction = function(){\n\n    return function(){\n        var validateInput = function(inputElement){\n\n            // Extract index from id of input element of existing(/to be added) farm information\n            // to be used for the computed property\n            // of validations object\n            var index = 1;\n            index = (inputElement.id.includes('-')) ? inputElement.id.match(/\\d+/)[0]: index;\n            index = (inputElement.id.includes('[')) ? inputElement.id.match(/\\d+/)[0]: index;\n\n            // Initialize needed validations\n            var validations = {\n                address_addressLine1: ['required'],\n                address_addressLine2: ['required'],\n                address_zipCode: ['required', 'zipCodePh'],\n                // landline: ['landline'],\n                mobile: ['required', 'phoneNumber'],\n                ['farm-' + index + '-name']: ['required'],\n                ['farm-' + index + '-addressLine1']: ['required'],\n                ['farm-' + index + '-addressLine2']: ['required'],\n                ['farm-' + index + '-zipCode']: ['required', 'zipCodePh'],\n                ['farm-' + index + '-farmType']: ['required'],\n                ['farm-' + index + '-mobile']: ['required', 'phoneNumber'],\n                ['farmAddress[' + index + '][name]']: ['required'],\n                ['farmAddress[' + index + '][addressLine1]']: ['required'],\n                ['farmAddress[' + index + '][addressLine2]']: ['required'],\n                ['farmAddress[' + index + '][zipCode]']: ['required', 'zipCodePh'],\n                ['farmAddress[' + index + '][farmType]']: ['required'],\n                ['farmAddress[' + index + '][mobile]']: ['required', 'phoneNumber'],\n                'currentpassword': ['required'],\n                'newpassword': ['required', 'minLength:8'],\n                'newpasswordconfirm': ['required', 'equalTo:newpassword']\n            };\n\n            // Check if validation rules exist\n            if(validations[inputElement.id]){\n                var result = true;\n\n                for (var i = 0; i < validations[inputElement.id].length; i++) {\n                    var element = validations[inputElement.id][i];\n\n                    // Split arguments if there are any\n                    var method = element.includes(':') ? element.split(':') : element;\n\n                    result = (typeof(method) === 'object')\n                        ? (validationMethods[method[0]](inputElement, method[1]))\n                        : (validationMethods[method](inputElement));\n\n                    // Result would return to a string errorMsg if validation fails\n                    if(result !== true){\n                        placeError(inputElement, result);\n                        return false;\n                    }\n                }\n\n                // If all validations succeed then\n                if(result === true){\n                    placeSuccess(inputElement);\n                    return true;\n                }\n            }\n        };\n\n        // onfocusout and keyup events on\n        // personal-information and\n        // farm-information\n        // input only\n        $('body').on('focusout keyup', '#personal-information input, #farm-information input', function(e){\n            validateInput(this);\n        });\n\n        // keyup event on changing of password\n        $('#password-information input').focusout(function(){\n            if($(this).val()) validateInput(this);\n        })\n\n        $('#password-information input').keyup(function(){\n            validateInput(this);\n        });\n\n        // Edit on Personal/Farm Information\n        $('.edit-button').click(function(e){\n            e.preventDefault();\n            var edit_button = $(this);\n            var cancel_button = edit_button.parents('.content-section').find('.cancel-button');\n            var parent_form = edit_button.parents('form');\n\n            edit_button.tooltip('remove');\n\n            // If button is for editing the fields\n            if(edit_button.attr('data-tooltip').includes('Edit'))profile.edit(parent_form, edit_button, cancel_button);\n\n            // If button is ready for submission\n            else {\n\n                // Determine if form is of personal or farm information\n                if (parent_form.attr('data-personal-id')) {\n\n                    // Check if required fields are properly filled\n                    var address_addressLine1 = validateInput(document.getElementById('address_addressLine1'));\n                    var address_addressLine2 = validateInput(document.getElementById('address_addressLine2'));\n                    var address_zipCode = validateInput(document.getElementById('address_zipCode'));\n                    var mobile = validateInput(document.getElementById('mobile'));\n\n                    // Submit if all validations are met\n                    if(address_addressLine1 && address_addressLine2 && address_zipCode){\n                        $('.edit-button').addClass('disabled');\n                        $('.cancel-button').addClass('disabled');\n                        profile.update(parent_form, edit_button, cancel_button);\n                    }\n                    else Materialize.toast('Please properly fill all required fields.', 2500, 'orange accent-2');\n                }\n                else if(parent_form.attr('data-farm-id')){\n\n                    // Check if required fields are properly filled\n                    // Count how many current Farm Addresses are available\n                    var farmNumber = parent_form.attr('data-farm-order');\n                    var farmValid = true;\n\n                    var farm_name = validateInput(document.getElementById('farm-' + farmNumber + '-name'));\n                    var farm_addressLine1 = validateInput(document.getElementById('farm-' + farmNumber + '-addressLine1'));\n                    var farm_addressLine2 = validateInput(document.getElementById('farm-' + farmNumber + '-addressLine2'));\n                    var farm_zipCode = validateInput(document.getElementById('farm-' + farmNumber + '-zipCode'));\n                    var farmType = validateInput(document.getElementById('farm-' + farmNumber + '-farmType'));\n                    var farm_mobile = validateInput(document.getElementById('farm-' + farmNumber + '-mobile'));\n\n                    farmValid = farmValid && farm_name && farm_addressLine1 && farm_addressLine2 && farm_zipCode && farmType && farm_mobile;\n\n                    // Submit if all validations are met\n                    if(farmValid){\n                        $('.edit-button').addClass('disabled');\n                        $('.cancel-button').addClass('disabled');\n                        profile.update(parent_form, edit_button, cancel_button);\n                    }\n                    else Materialize.toast('Please properly fill all required fields.', 2500, 'orange accent-2');\n                }\n            }\n\n        });\n\n        // Submit added farm information\n        $('body').on('click', '#submit-button' ,function(e){\n            e.preventDefault();\n\n            // Count how many current Farm Addresses are available\n            var farmNumber = $('#create-profile .add-farm').length+1;\n            var farmValid = true;\n\n            for (var i = 1; i < farmNumber; i++) {\n\n                var farm_name = validateInput(document.getElementById('farmAddress[' + i + '][name]'));\n                var farm_addressLine1 = validateInput(document.getElementById('farmAddress[' + i + '][addressLine1]'));\n                var farm_addressLine2 = validateInput(document.getElementById('farmAddress[' + i + '][addressLine2]'));\n                var farm_zipCode = validateInput(document.getElementById('farmAddress[' + i + '][zipCode]'));\n                var farmType = validateInput(document.getElementById('farmAddress[' + i + '][farmType]'));\n                var farm_mobile = validateInput(document.getElementById('farmAddress[' + i + '][mobile]'));\n\n                farmValid = farmValid && farm_name && farm_addressLine1 && farm_addressLine2 && farm_zipCode && farmType && farm_mobile;\n            }\n\n            // Submit if all validations are met\n            if(farmValid){\n                $(this).addClass('disabled');\n                profile.add($('#create-profile'));\n            }\n            else Materialize.toast('Please properly fill all required fields.', 2500, 'orange accent-2');\n\n        });\n\n        // Change password\n        $('#change-password-button').click(function(e){\n            e.preventDefault();\n\n            var currentPassword = validateInput(document.getElementById('currentpassword'));\n            var newPassword = validateInput(document.getElementById('newpassword'));\n            var newPasswordConfirm = validateInput(document.getElementById('newpasswordconfirm'));\n\n            if(currentPassword && newPassword && newPasswordConfirm){\n                $(this).addClass('disabled');\n                profile.change_password($('#change-password-form'));\n            }\n        });\n\n    }\n}\n\n$(document).ready(validateFunction());\n"]}